diff --git a/ball b/ball
index 7c3ef4b55b7557dec0d7f794fc11ab8a4e1898ec..03ba4ae58af1be52ef6405326c454a97e4ec0f67 100755
GIT binary patch
literal 20192
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

literal 15808
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

diff --git a/core/ball.c b/core/ball.c
index e9545a2..37d63be 100644
--- a/core/ball.c
+++ b/core/ball.c
@@ -23,7 +23,7 @@ int32_t main(int argc, char** argv) {
   char* targets[]         = {"gc32-20020", "gboot", "mkfs.govnfs", "ugovnfs", "prepare-disk"};
   char* install_targets[] = {"gc32-20020", "gboot", "mkfs.govnfs", "ugovnfs", "prepare-disk", "kasm"};
   char* build_commands[] = {
-    "%s %s core/main.c -Ilib/ -lm -lSDL2 -o gc32-20020",
+    "%s %s core/main.c -Ilib/ -lm -lSDL3 -o gc32-20020",
     "%s %s core/gboot/main.c -o gboot",
     "%s %s core/mkfs.govnfs/main.c -o mkfs.govnfs",
     "%s %s core/ugovnfs/main2.c -Ilib/ -lm -o ugovnfs",
diff --git a/core/main.c b/core/main.c
index 60a6a00..68e6c31 100644
--- a/core/main.c
+++ b/core/main.c
@@ -145,14 +145,16 @@ I32 main(I32 argc, I8** argv) {
       // No drives for you, govnos doesnt work without govnbios
       gc.EPC = 0x00030000;
       // bye lmao
+      if (argc > argp + 1) {
+        fprintf(stderr, "gc32-20020: \033[91mwarning:\033[0m some arguments not parsed\n");
+      }
       break;
     }
   }
 
   // GPU
-  gravno_start;
-  gc.renderer = renderer;
-  GGinit(&(gc.gg), renderer, scale);
+  GGinit(&(gc.gg), scale);
+  GAinit(&(gc.ga));
 
   int runcode = 0xFF;
   tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
@@ -162,7 +164,7 @@ I32 main(I32 argc, I8** argv) {
   }
   tcsetattr(STDIN_FILENO, TCSANOW, &newt);
   U8 exec_errno = Exec(&gc, verbosemode);
-  gravno_end;
+  GGstop(&(gc.gg));
   old_st;
   // Saving shit? oh yeah
   U8 did;
diff --git a/fun/paint2.asm b/fun/paint2.asm
index 81de0eb..5e430a9 100644
--- a/fun/paint2.asm
+++ b/fun/paint2.asm
@@ -3,10 +3,10 @@ loop: ._:
     mov %eax $480005
     mov %ecx 5
 .kbdloop:
-    lodb %eax %edx
+    lb %eax %edx
     cmp %edx 0
     jne .noCur
-    loop .kbdloop
+    lp .kbdloop
 ; Hehe
 .check_serial:
     int $9
@@ -14,20 +14,20 @@ loop: ._:
     jne .popi
 ; Clear old cursor
     ; mov %eax old_cur_pos
-    ; lodw %eax %ebx
-    ; lodw %eax %ecx
+    ; lw %eax %ebx
+    ; lw %eax %ecx
     ; mov %egi nul
     ; call spr
 
     mov %eax $480000
-    lodw %eax %ebx
-    lodw %eax %ecx
-    ; lodb %eax %edx - Mouse state
+    lw %eax %ebx
+    lw %eax %ecx
+    ; lb %eax %edx - Mouse state
     mov %egi cursor
-    call spr
+    jsr spr
     mov %esi old_cur_pos
-    stow %esi %ebx
-    stow %esi %ecx
+    sw %esi %ebx
+    sw %esi %ecx
 .noCur:
     int $11
     mov %edx 8
@@ -44,7 +44,7 @@ spr:
     add %esi %ebx
     add %esi $400000
     int $13
-    ret
+    rts
 
 old_cur_pos: reserve 4 bytes
 cursor:
diff --git a/govnos/boot.asm b/govnos/boot.asm
index c7a82ae..0ad729d 100644
--- a/govnos/boot.asm
+++ b/govnos/boot.asm
@@ -4,14 +4,14 @@ reboot: jmp boot
 b_scans:
   mov %e8 $00
 .lp:
-  int 1
-  pop %eax
+  int $93
+  ; pop %eax
   cmp %eax $7F
   je .back
   ; cmp %eax $1B
   ; je b_scans.lp
-  psh %eax
-  int 2
+  ; psh %eax
+  int $92
   cmp %eax $0A
   je .end
   sb %esi %eax
@@ -25,7 +25,7 @@ b_scans:
 .back_strict:
   psh %esi
   mov %esi bs_seq
-  int $81
+  int $91
   pop %esi
   sb %esi %e8
   sub %esi 2
@@ -126,8 +126,10 @@ b_write:
   dex %ecx
 .lp:
   lb %esi %eax
-  psh %eax
-  int $02
+  cmp %eax 0
+  je .llp
+  int $92
+.llp:
   lp .lp
   pop %eax
   rts
@@ -160,8 +162,10 @@ b_puti_buf: reserve 8 bytes
 b_scani:
   mov %eax $00
 .lp:
-  int $01
-  pop %ebx
+  psh %eax
+  int $93
+  mov %ebx %eax
+  pop %eax
 
   cmp %ebx $0A ; Check for Enter
   re
@@ -175,8 +179,10 @@ b_scani:
   jg .lp
 
   mul %eax 10
-  psh %ebx
-  int $02
+  psh %eax
+  mov %eax %ebx
+  int $92
+  pop %eax
   sub %ebx 48
   add %eax %ebx
   jmp .lp
@@ -187,7 +193,7 @@ b_scani:
 .back_strict:
   mov %esi bs_seq
   psh %eax
-  int $81
+  int $91
   pop %eax
   div %eax 10
   jmp .lp
@@ -297,15 +303,15 @@ boot:
   ; Load the kernel libraries
   jsr gfs2_configure
   mov %esi welcome_msg
-  int $81
+  int $91
   mov %esi krnl_load_msg
-  int $81
+  int $91
   mov %esi emp_sec_msg00
-  int $81
+  int $91
   jsr fre_sectors
   jsr b_puti
   mov %esi emp_sec_msg01
-  int $81
+  int $91
 
   mov %ebx krnl_file_header
   mov %egi $A00000
@@ -316,7 +322,7 @@ boot:
 shell:
 .prompt:
   mov %esi env_PS
-  int $81
+  int $91
 
   mov %esi clen
   mov %eax $0000
@@ -428,16 +434,16 @@ shell:
   jmp .aftexec
 .bad:
   mov %esi bad_command
-  int $81
+  int $91
   mov %esi command
-  int $81
-  psh '$'
-  int $02
+  int $91
+  mov %eax '$'
+  int $92
 .aftexec:
   jmp .prompt
 govnos_hi:
   mov %esi hai_world
-  int $81
+  int $91
   jmp shell.aftexec
 govnos_date:
   int 3
@@ -447,8 +453,7 @@ govnos_date:
   psh %edx
   jsr b_puti
   pop %edx
-  psh '-'
-  int 2
+  mov %eax '-' int $92
   mov %eax %edx
   sar %eax 5
   mov %ebx $000F
@@ -456,26 +461,26 @@ govnos_date:
   inx %eax
   cmp %eax 10
   jg .p0
-  psh '0'
-  int 2
+  psh %eax
+  mov %eax '0' int $92
+  pop %eax
 .p0:
   psh %edx
   jsr b_puti
   pop %edx
-  psh '-'
-  int 2
+  mov %eax '-' int $92
   mov %eax %edx
   mov %ebx $001F
   and %eax %ebx
   inx %eax
   cmp %eax 10
   jg .p1
-  psh '0'
-  int 2
+  psh %eax
+  mov %eax '0' int $92
+  pop %eax
 .p1:
   jsr b_puti
-  psh '$'
-  int 2
+  mov %eax '$' int $92
   jmp shell.aftexec
 govnos_time:
   int 5
@@ -483,26 +488,26 @@ govnos_time:
   mov %eax %ebx
   div %eax 3600
   jsr b_puti
-  psh ':' int 2
+  mov %eax ':' int $92
   mov %eax %ebx
   div %eax 3600
   mov %eax %edx
   div %eax 60
   jsr b_puti
-  psh ':' int 2
+  mov %eax ':' int $92
   mov %eax %ebx
   div %eax 60
   mov %eax %edx
   jsr b_puti
-  psh '$' int 2
+  mov %eax '$' int $92
   jmp shell.aftexec
 govnos_cls:
   mov %esi cls_seq
-  int $81
+  int $91
   jmp shell.aftexec
 govnos_help:
   mov %esi help_msg
-  int $81
+  int $91
   jmp shell.aftexec
 govnos_exit:
   hlt
@@ -511,30 +516,29 @@ govnos_echo:
   mov %esi command
   mov %ecx ' '
   jsr b_strtok
-  int $81
-  psh $0A
-  int 2
+  int $91
+  mov %eax '$' int $92
   jmp shell.aftexec
 
-welcome_msg:   bytes "Welcome to ^[[33mGovnOS^[[0m$^@"
-krnl_load_msg: bytes "Loading ^[[38;5;136m:/krnl.bin/com^[[0m...$^@"
-emp_sec_msg00: bytes "$Disk sectors used: ^[[93m^@"
-emp_sec_msg01: bytes "^[[0m$$^@"
+welcome_msg:   bytes "Welcome to ^\fDGovnOS^\r$^@"
+krnl_load_msg: bytes "Loading ^\fL:/krnl.bin/com^\r...$^@"
+emp_sec_msg00: bytes "$Disk sectors used: ^\fK^@"
+emp_sec_msg01: bytes "^\r$$^@"
 bad_command:   bytes "Bad command: ^@"
 
-help_msg:    bytes "^[[38;5;69m+-------------------------------------------+$"
-             bytes "^[[38;5;69m|^[[96mGovnOS help page 1/1^[[38;5;69m                       |$"
-             bytes "^[[38;5;69m|  ^[[92mcat         ^[[93mOutput file contents^[[38;5;69m         |$"
-             bytes "^[[38;5;69m|  ^[[92mcalc        ^[[93mCalculator^[[38;5;69m                   |$"
-             bytes "^[[38;5;69m|  ^[[92mcls         ^[[93mClear the screen^[[38;5;69m             |$"
-             bytes "^[[38;5;69m|  ^[[92mdir         ^[[93mShow files on the disk^[[38;5;69m       |$"
-             bytes "^[[38;5;69m|  ^[[92mdate        ^[[93mShow current date (%Y-%m-%d)^[[38;5;69m |$"
-             bytes "^[[38;5;69m|  ^[[92mtime        ^[[93mShow current time (%H:%M:%S)^[[38;5;69m |$"
-             bytes "^[[38;5;69m|  ^[[92mecho        ^[[93mEcho text back to output^[[38;5;69m     |$"
-             bytes "^[[38;5;69m|  ^[[92mexit        ^[[93mExit from the shell^[[38;5;69m          |$"
-             bytes "^[[38;5;69m|  ^[[92mgsfetch     ^[[93mShow system info^[[38;5;69m             |$"
-             bytes "^[[38;5;69m|  ^[[92mhelp        ^[[93mShow help^[[38;5;69m                    |$"
-             bytes "^[[38;5;69m+-------------------------------------------+^[[0m$^@"
+help_msg:    bytes "^\fM+-------------------------------------------+$"
+             bytes "^\fM|^\fCGovnOS help page 1/1^\fM                       |$"
+             bytes "^\fM|  ^\fKcat         ^\fLOutput file contents^\fM         |$"
+             bytes "^\fM|  ^\fKcalc        ^\fLCalculator^\fM                   |$"
+             bytes "^\fM|  ^\fKcls         ^\fLClear the screen^\fM             |$"
+             bytes "^\fM|  ^\fKdir         ^\fLShow files on the disk^\fM       |$"
+             bytes "^\fM|  ^\fKdate        ^\fLShow current date (%Y-%m-%d)^\fM |$"
+             bytes "^\fM|  ^\fKtime        ^\fLShow current time (%H:%M:%S)^\fM |$"
+             bytes "^\fM|  ^\fKecho        ^\fLEcho text back to output^\fM     |$"
+             bytes "^\fM|  ^\fKexit        ^\fLExit from the shell^\fM          |$"
+             bytes "^\fM|  ^\fKgsfetch     ^\fLShow system info^\fM             |$"
+             bytes "^\fM|  ^\fKhelp        ^\fLShow help^\fM                    |$"
+             bytes "^\fM+-------------------------------------------+^\r$^@"
 
 com_hi:      bytes "hi "
 com_cls:     bytes "cls "
@@ -559,7 +563,7 @@ command:     reserve 64 bytes
 clen:        reserve 2 bytes
 
 bs_seq:      bytes "^H ^H^@"
-cls_seq:     bytes "^[[H^[[2J^@"
+cls_seq:     bytes "^\z^@"
 env_PS:      bytes "> ^@"
 
 bse:         bytes $AA $55
diff --git a/govnos/calc.asm b/govnos/calc.asm
index 7f5f7f9..dcbf61c 100644
--- a/govnos/calc.asm
+++ b/govnos/calc.asm
@@ -1,13 +1,13 @@
 calc_main:
   ; First number
   mov %esi calc_00
-  int $81
+  int $91
   jsr scani
 
   ; Second number
   mov %esi calc_01
   psh %eax
-  int $81
+  int $91
   jsr scani
   mov %ebx %eax
   pop %eax
@@ -15,14 +15,15 @@ calc_main:
   ; Operation
   mov %esi calc_02
   psh %eax
-  int $81
+  int $91
+  int $93
+  int $92
+  mov %ecx %eax
+  pop %eax
+
+  psh %eax
+  mov %eax '$' int $92
   pop %eax
-  int $01
-  pop %ecx
-  psh %ecx
-  int $02
-  psh '$'
-  int 2
 
   cmp %ecx '+'
   je .add
@@ -36,35 +37,31 @@ calc_main:
 .add:
   add %eax %ebx
   jsr puti
-  psh '$'
-  int $02
+  mov %eax '$' int $92
   rts
 .sub:
   sub %eax %ebx
   jsr puti
-  psh '$'
-  int $02
+  mov %eax '$' int $92
   rts
 .mul:
   mul %eax %ebx
   jsr puti
-  psh '$'
-  int $02
+  mov %eax '$' int $92
   rts
 .div:
   cmp %ebx $00
   je .div_panic
   div %eax %ebx
   jsr puti
-  psh '$'
-  int $02
+  mov %eax '$' int $92
   rts
 .div_panic:
   mov %eax $000000
   jmp krnl_panic
 .unk:
   mov %esi calc_03
-  int $81
+  int $91
   rts
 
 calc_00:     bytes "Enter first number: ^@"
diff --git a/govnos/cat.asm b/govnos/cat.asm
index 5741813..db4b69b 100644
--- a/govnos/cat.asm
+++ b/govnos/cat.asm
@@ -38,19 +38,19 @@ cat_main:
   jmp .failed
 .output:
   mov %esi $280000
-  int $81
+  int $91
   rts
 .failed:
   mov %esi cat_msg01
-  int $81
+  int $91
   mov %esi %r13
-  int $81
+  int $91
   mov %esi cat_msg02
-  int $81
+  int $91
   rts
 .no_args:
   mov %esi cat_msg00
-  int $81
+  int $91
   rts
 
 cat_msg00: bytes "No tag given. Try `cat test.txt` to see the test.txt file's contents.$^@"
diff --git a/govnos/dima.txt b/govnos/dima.txt
index dd69b56..bd5c705 100644
--- a/govnos/dima.txt
+++ b/govnos/dima.txt
@@ -1,49 +1,49 @@
-[0m0[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mo[0m:[0m:[0m:[0m:[0m:[0m[37m;[0m[37m:[0m[37ml[0m[37mo[0m[37m;[0m[37m;[0m[37m:[0m.[0m,[0m'[0m.[0m.[0m[37m.[0m[37m.[0m[37m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m.[0m.[0m,[0m[37m;[0m[37m;[0m[37m.[0m[37m.[0m[37m.[0m[37m.[0m[37m.[0m[37m.[0m[37m'[0m[37m:[0m[37m:[0m[37m;[0m[37m:[0ml[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m;[0mx[0m0[0m0[0m0[0m0[0m0[0m[37mx[0m[37m.[0mc[0m0[0m0[0m0[0m0[0m[37md[0m[37m.[0m[37mo[0m[37m0[0m[37m0[0m[37mk[0m[37mo[0m,[0mx[0mK[0m0[0mK[0mk[0m;[0m.[0m.[0mc[0m0[0mK[0m0[0m0[0m[37m0[0m[37ml[0m[37m.[0m[37mk[0m[37m0[0m[37m;[0m[37m [0m[37md[0m[37m0[0m[37m0[0m;[0mO[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m;[0mK[0mW[0mK[0m;[0mK[0mM[0m0[0m'[0mX[0mM[0mO[0mo[0m[37mM[0m[37mM[0m[37ml[0m[37mk[0m[37mM[0m[37mN[0m[37m'[0m[37m [0m[37mo[0m[37mW[0m[37mM[0m[37mo[0m[37mX[0m[37mM[0m[37mO[0m[37m [0m[37m [0mx[0mW[0mN[0mk[0mM[0m[37mM[0m[37md[0m[37m.[0m[37mX[0m[37mM[0m[37mc[0m[37ml[0m[37mW[0m[37mW[0m[37mW[0m:[0mO[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m;[0m[37mK[0mW[0m0[0m.[0mK[0m[37mM[0m[37m0[0m[37m,[0m[37mX[0m[37mM[0m[37mO[0m[37ml[0m[37mM[0m[37mM[0m[37ml[0m[37mk[0m[37mM[0m[37mN[0m[37m.[0m[37m [0md[0mM[0m[37mM[0m[37ml[0m[37mX[0m[37mM[0m0[0m [0m.[0m[37m0[0mW[0m0[0mc[0mM[0mM[0md[0m.[0mX[0mW[0m[37mK[0m[37mN[0m[37mX[0m[37mM[0m[37mW[0m;[0ml[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m;[0m[37mK[0m[37mW[0m0[0m.[0mK[0m[37mM[0m0[0m[37m,[0mX[0mM[0mO[0mo[0mM[0mW[0mc[0mk[0mM[0mN[0m[37m.[0m[37m [0mo[0mW[0mW[0mo[0mX[0mW[0mO[0m'[0mx[0m[37mW[0m[37mW[0m[37mk[0m[37md[0m[37mW[0m[37mM[0mO[0m,[0mX[0m[37mM[0m[37mW[0mx[0m[37ml[0m[37mM[0m[37mW[0m,[0m;[0ml[0mx[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m;[0m[37md[0mk[0mo[0m.[0md[0mO[0md[0m.[0m:[0mk[0mO[0mk[0mk[0mo[0m.[0ml[0mO[0m[37mx[0m[37m.[0m[37m.[0m[37m,[0m[37md[0m[37mO[0m[37mO[0m[37mO[0m[37mx[0m[37m'[0m[37mo[0m[37mW[0mK[0mO[0mO[0mO[0m[37mO[0m[37mX[0m[37mN[0m:[0mx[0mO[0md[0m.[0m,[0mO[0mk[0m'[0m[31m,[0m[31m:[0m[31m:[0ml[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m0[0mk[0mk[0md[0m:[0m;[0m,[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m'[0m[31m,[0m[31m,[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m,[0m:[0mx[0m;[0m,[0mc[0m[31m:[0m.[0m:[0md[0m.[0m'[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m;[0m[31m:[0m[31m:[0m[31mc[0md[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mx[0mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31mc[0m[31mx[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m0[0mo[0mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31mo[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mO[0mo[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31mo[0mO[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mO[0m[31mo[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31md[0m[31md[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m,[0m[31m:[0mo[0mO[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31m0[0m[31mo[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31mx[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0ml[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31m0[0m[31mo[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m;[0m[31mc[0m[31ml[0m[31md[0m[31mx[0m[31mx[0m[31mx[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31md[0m[31md[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31ml[0m[31m:[0m[31m;[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m;[0m[31m:[0mo[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31m0[0m[31mo[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m:[0m[31ml[0m[31mo[0m[31md[0m[31md[0m[31mo[0m[31ml[0m[31md[0m[31mx[0m[31mo[0m[31mo[0m[31mo[0m[31mc[0m[31m;[0m[31m,[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0ml[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mO[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m:[0m[31mc[0m[31ml[0m[31mo[0m[31md[0m[31mo[0m[31m:[0m[31m,[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m;[0m[31m:[0m[31mc[0mc[0mk[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mk[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m;[0m[31m'[0m[31m,[0m[31m,[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m;[0m[31mc[0m[31ml[0m[31mo[0m[31mc[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m,[0m[31mc[0m[31mc[0m[31mc[0ml[0mO[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mK[0m[31md[0m[31m:[0m[31ml[0m[31ml[0m[31ml[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m;[0m[31mc[0m[31mc[0m[31mc[0m[31m;[0m[31m'[0m[31m.[0m[31m'[0m[31m;[0m[31m;[0m[31m;[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0ml[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31m0[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31mc[0mo[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mO[0m[31mc[0m[31m:[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31mc[0m[31mc[0m[31m;[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31m:[0md[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31m0[0m[31ml[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31md[0m[31mx[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31mo[0m[31md[0m[31mo[0m[31m:[0m[31m,[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31mc[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31m:[0mk[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mK[0m[31md[0m[31m:[0m[31m:[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31md[0m[31md[0m[31mx[0m[31mx[0m[31mx[0m[31mx[0m[31md[0m[31mo[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mo[0m[31md[0m[31mo[0m[31mc[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m,[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0mk[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mk[0m[31mc[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31mo[0m[31mc[0m[31m:[0m[31mc[0m[31ml[0m[31md[0m[31mx[0m[31md[0m[31md[0m[31mo[0m[31ml[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m:[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m:[0mO[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mO[0m[31ml[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31md[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mx[0m[31mx[0m[31md[0m[31mx[0m[31md[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m:[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0m[31md[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31md[0m[31md[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31mc[0m[31ml[0m[31md[0m[31mx[0m[31mx[0m[31mx[0m[31mx[0m[31mo[0m[31m:[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31ml[0m[31mo[0m[31ml[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31mc[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0m[31mx[0m[31mc[0m[31mc[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m;[0m[31m,[0m[31m.[0m[31m,[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31m,[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m;[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31md[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m0[0m[31mo[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31m;[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m:[0mk[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m0[0m[31mo[0m[31m:[0m[31mc[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31m:[0m[31m;[0m[31m:[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31mx[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0m0[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m[31mK[0m[31md[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m;[0m[31m,[0m[31m'[0m[31m,[0m[31m;[0m[31m,[0m[31m,[0m[31m'[0m[31m,[0m[31md[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0m[31mk[0m[31m:[0m[31m;[0m[31m:[0m[31m:[0m[31m;[0m[31m:[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31ml[0m[31mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0m[31mO[0m[31mx[0m[31mc[0m[31m,[0m[31m,[0m[31m:[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31mc[0m[31ml[0m[31ml[0m[31mo[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m.[0m[31m'[0m[31m.[0m[31m.[0m[31m;[0m[31md[0m[31mO[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0m0[0m[31mk[0m[31md[0m[31mo[0m[31mc[0m[31m;[0m[31m'[0m[31m'[0m[31m;[0m[31m'[0m[31m,[0m[31m,[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m:[0m[31ml[0m[31md[0m[31mx[0mO[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0mO[0m[31mx[0m[31mo[0m[31ml[0m[31m:[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m,[0m[31m'[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m'[0m[31m'[0m[31m'[0m[31m;[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31m:[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m:[0m[31mc[0m[31m:[0m[31m:[0m[31m,[0m[31m,[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m:[0m[31mc[0m[31ml[0m[31md[0m[31mO[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0m
-[0mK[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mX[0mK[0m0[0m0[0m[31mO[0m[31mx[0m[31ml[0m[31m:[0m[31m,[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31m;[0m[31m,[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31m:[0m[31m;[0m[31m.[0m[31m'[0m[31m,[0m[31m,[0m[31m;[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m;[0m[31m;[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m;[0m[31m:[0m[31ml[0m[31mo[0m[31mx[0mk[0mO[0mO[0mO[0mO[0m
-[0mx[0md[0mo[0mo[0mo[0mx[0mx[0m[31mx[0m[31md[0m[31mo[0m[31m:[0m[31m;[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31mc[0m[31m;[0m[31m,[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31m,[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m
-[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m,[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m
-[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31mo[0m[31ml[0m[31mo[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31m;[0m[31m,[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m
-[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31m:[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m
-[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m,[0m[31m:[0m[31mc[0m[31m;[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m;[0m[31m,[0m[31m.[0m[31m.[0m[31m'[0m[31m;[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m
-[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31ml[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m;[0m[31m'[0m[31m;[0m[31m;[0m[31m'[0m[31m;[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m
-[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31mc[0m[31m:[0m[31m;[0m[31m,[0m[31m'[0m[31m'[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m,[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m
-[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m,[0m[31m,[0m[31m,[0m[31m:[0m[31mc[0m[31m:[0m[31m,[0m[31m;[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m
-[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m.[0m[31m,[0m[31m:[0m[31m;[0m[31mc[0m[31mx[0m[31mk[0m[31mk[0m[31mx[0m[31m;[0m[31m;[0m[31mc[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m'[0m[31m.[0m[31m,[0mc[0mc[0m;[0m[31m.[0m[31m'[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m
-[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m;[0m[31m.[0m'[0m;[0m:[0m:[0m,[0m.[0m,[0m:[0m:[0m:[0m:[0m:[0m'[0m.[0m'[0m:[0mc[0m:[0m[31m'[0m[31m.[0m[31m.[0m[31m'[0m[31m.[0m[31m'[0m:[0m:[0m,[0m;[0m:[0m[31m,[0m[31m.[0m[31m.[0m[31m'[0m:[0m:[0m:[0m'[0m[31m.[0m[31m.[0m[31m.[0m'[0m:[0mc[0m:[0m'[0m'[0m'[0m:[0m:[0m:[0m:[0m:[0m:[0m;[0m.[0m,[0m:[0m[31m:[0m[31m.[0m[31m;[0m[31m;[0m[31m,[0m[31m.[0m[31m:[0m:[0m;[0m'[0mc[0m:[0m,[0m.[0m.[0m;[0mc[0m[31mc[0m[31m;[0m.[0m.[0m,[0m[37mK[0m[37mW[0m[37mK[0m[37mK[0m[37mW[0m0[0m.[0m[31m'[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31m:[0m
-[0m[31m,[0m[31m,[0m[31m;[0m[31m:[0m[31m:[0m[31m;[0m.[0m[37ml[0m[37mN[0m[37mW[0mO[0mW[0mN[0mc[0m[37mc[0m[37mx[0m[37mN[0m[37mW[0m[37mW[0m[37mO[0m[37m:[0m[37mc[0m[37mN[0m[37mN[0m[37mx[0m[37mN[0m[37mN[0mc[0m[31m.[0m[31m'[0m[31m.[0mo[0m[37mM[0m[37mW[0m[37mx[0m[37mO[0m[37mW[0m[37mN[0m[37m;[0m[37mc[0m[37mW[0m[37mW[0m[37mO[0m[37mW[0m[37mW[0m[37mo[0m[37m.[0m[37mx[0m[37mW[0m[37m0[0m[37mk[0mW[0mN[0m[37m:[0m.[0m0[0m[37mM[0m[37mW[0m[37mk[0m[37mX[0m[37mM[0m[37mX[0m[37m'[0m[37mO[0m[37mM[0m[37mN[0m,[0m[31m'[0m[31m,[0m[31m'[0m[37m,[0m[37mN[0m[37mM[0m[37mk[0m:[0m[37mM[0m[37mW[0m[37md[0m[37m'[0m[37mK[0m[37mW[0m[37mO[0m[37mO[0m[37mW[0m0[0m'[0m'[0md[0md[0m,[0md[0m[37mM[0mW[0mc[0m[31m.[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m
-[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31m:[0m[31m;[0m.[0m[37m;[0m[37mc[0mo[0mx[0m[37mW[0m[37mW[0m[37mx[0m[37m [0m[37m.[0m[37m0[0m[37mW[0m[37mN[0m[37m.[0m[37m [0m[37mO[0m[37mM[0m[37mX[0m[37m,[0m[37mK[0mW[0mx[0m[31m.[0m[31m,[0m[31m.[0m[37mo[0m[37mM[0m[37mM[0mc[0m[37mo[0mM[0mW[0m[37mc[0m[37mx[0m[37mW[0m[37mW[0m[37m0[0m[37mN[0m[37mW[0m[37m0[0m[37m.[0m[37mc[0m[37mk[0m[37mk[0m[37mk[0m[37mW[0m[37mM[0mx[0m[37m.[0m[37m0[0m[37mW[0m[37mX[0m[37m.[0m[37mk[0mM[0mN[0m'[0mO[0mM[0m[37mW[0m[37m0[0m[37mO[0m[37mk[0m[37m:[0m[37m,[0m[37mN[0m[37mW[0mX[0mO[0m[37mM[0mW[0m[37md[0mc[0m[37mW[0m[37mW[0ml[0m[37ml[0mM[0m[37mM[0mc[0m[37m.[0m[37mo[0mo[0m:[0m[37mk[0m[37mW[0mW[0m:[0m[31m.[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m
-[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m;[0m[31m:[0m.[0m[37m:[0m[37mo[0mo[0ml[0m[37mW[0m[37mW[0m[37mx[0m[37m [0m[37m.[0m[37m0[0m[37mW[0m[37mN[0m[37m.[0m[37m [0m[37mO[0m[37mW[0mX[0m[37m,[0m[37mK[0mW[0mx[0m.[0m[31m;[0m[31m.[0m[37mo[0m[37mM[0m[37mM[0m[37mc[0m[37mo[0mM[0mW[0m[37mc[0m[37mx[0m[37mW[0m[37mW[0m[37mc[0m[37md[0m[37mO[0m[37md[0m[37m.[0m[37mk[0m[37mW[0m[37m0[0m[37mo[0m[37mW[0m[37mM[0m[37mx[0m[37m.[0m[37m0[0m[37mM[0m[37mX[0m[37m.[0mk[0m[37mM[0m[37mN[0m[37m'[0m[37mO[0m[37mM[0mW[0md[0mN[0mM[0m0[0m,[0mN[0mM[0m[37mK[0m[37mk[0m[37mM[0m[37mW[0m[37md[0m[37mc[0m[37mW[0m[37mW[0mc[0m[37mo[0mM[0m[37mW[0m[37mc[0m[37m,[0m[37mX[0m[37mX[0m[37mk[0m[37mx[0mk[0ml[0m'[0m[31m:[0m[31mc[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m
-[0m[31m'[0m[31m,[0m[31m,[0m[31m,[0m[31m'[0m[31m,[0m.[0m[37mx[0m[37mW[0mN[0mx[0m[37mW[0m[37mW[0m[37ml[0m[37m.[0m[37m.[0m[37m0[0m[37mW[0m[37mN[0m[37m'[0m [0mx[0mW[0m[37mN[0m[37md[0mX[0mW[0mo[0m[31m.[0m[31m:[0m[31m.[0m[37mo[0m[37mM[0mM[0mx[0mk[0m[37mW[0m[37mW[0m:[0mo[0m[37mW[0m[37mW[0m[37md[0m[37mX[0m[37mW[0m[37mk[0m[37m.[0m[37mK[0m[37mW[0m[37mO[0m[37md[0m[37mW[0m[37mM[0m[37mk[0m[37m:[0m[37mX[0m[37mW[0m[37mK[0m[37m.[0m[37mk[0m[37mM[0m[37mX[0m[37m'[0m[37mO[0m[37mM[0m[37mW[0m0[0mW[0m[37mM[0m[37m0[0m[37m,[0m[37mN[0m[37mM[0m[37mk[0m[37m:[0m[37mM[0m[37mW[0m[37md[0m[37m;[0m[37mN[0m[37mW[0m[37mk[0m[37mk[0m[37mM[0mX[0m,[0m'[0mO[0mO[0m[37m;[0m[31m.[0m[31m;[0m[31m:[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m
-[0m[31m.[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m.[0m[37m:[0m[37ml[0m[37mo[0ml[0m:[0m'[0m,[0m.[0mc[0mo[0mo[0m'[0m,[0m'[0mc[0md[0md[0md[0mc[0m[31m,[0m[31m:[0m[31m:[0m[31m.[0m[37mo[0m[37mW[0mW[0m[37md[0m[37ml[0m[37mo[0mc[0m'[0m'[0mc[0mo[0md[0mo[0ml[0m,[0m.[0m;[0mo[0mo[0mc[0mo[0mo[0m:[0m:[0mo[0ml[0m;[0m.[0m:[0m[37md[0mo[0m.[0mc[0mo[0md[0md[0mo[0mo[0m;[0m'[0mo[0md[0m[37mc[0m,[0mo[0mo[0m;[0m.[0m;[0m[37mo[0m[37md[0md[0mo[0m;[0m'[0m,[0md[0md[0m[31m;[0m[31m;[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m
-[0m[31m.[0m[31m.[0m[31m'[0m[31m'[0m[31m,[0m[31m,[0m[31m'[0m[31m'[0m[31m.[0m[31m.[0m[31m'[0m[31m,[0m[31m;[0m[31m;[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m'[0m[37m'[0m[37m:[0m:[0m[37m.[0m[31m.[0m[31m;[0m[31m;[0m[31m:[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m;[0m[31m:[0m[31m;[0m[31m;[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m,[0m[31m;[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31m:[0m[31m:[0m[31mc[0m[31mc[0m[31mc[0m[31ml[0m[31ml[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31mc[0m[31m:[0m[31mc[0m[31mc[0m[31ml[0m[31mo[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31ml[0m[31mo[0m[31mo[0m[31mo[0m[31ml[0m[31ml[0m
+XXXXXXXXXXXXXXXXo:::::;:lo;;:.,'.....fB.......,.fH.,;;......'::;:lKXXXXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXX;x00000x.c0000d.o00ko,xK0Kk;..c0K000l.k0; d00;OXXXXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXX;KWK;KM0'XMOoMMlkMN' oWMoXMO  xWNkMMd.XMclWWW:OXXXXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXX;KW0.KM0,XMOlMMlkMN. dMMlXM0 .0W0cMMd.XWKNXMW;l0XXXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXX;KW0.KM0,XMOoMWckMN. oWWoXWO'xWWkdWMO,XMWxlMW,;lxKXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXX;dko.dOd.:kOkko.lOx..,dOOOx'oWKOOOOXN:xOd.,Ok'fB,::fHl0XXXXXXXXXXXX
+XXXXXXXXXXXXXXXX0kkd:;,fB;;;,',,:cc:clooccccc,fH:x;,cfB:fH.:d.'fB:;,,''';::cfHdKXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXxcfB::::::::clooddddddddooolllooolcccllc::;;,;;::cxfHKXXXXXXXXXX
+XXXXXXXXXXXXXXXXXX0ocfBc::::::clooodddoooooooooooooolllccc:::;;,;;;:cofH0XXXXXXXXXX
+XXXXXXXXXXXXXXXXXXOofBccc:::::cllllllllllllllllllllllclcc:::;;,,,;;::ofHOXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXOfBoccc::::ccllooooddddddolllloddoolllc:::;,,,,;;,:fHoOXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfB0occccc::cccllooooodddxddddddddddolcc::;,''',;;;:fHl0XXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfB0olccc:;;;,''',,;cldxxxdddoddodddol:;'.......',;:fHo0XXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfB0olcccc:::;;;,'...',:loddoldxoooc;,.....''''',;::fHl0XXXXXXXXXX
+XXXXXXXXXXXXXXXXXOfBlllllcc::;,''''.......,:clodo:,......'.'''..',;:cfHckXXXXXXXXXX
+XXXXXXXXXXXXXXXXXfBk:cllllc:;',,:;,'''.....,;cloc'.....,,,,,,,'..,cccfHlOXXXXXXXXXX
+XXXXXXXXXXXXXXXXXfBKd:lll::ccclllllcc:;,,,,';ccc;'.';;;cccllc:;;;:cccfHl0XXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfB0ccllcccllolllllllcc:;,,:cc:;'''',:cccccc:::cc::cfHoKXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfBOc:llcclllolllllllolc:::clcc;''',;::ccllllc:;;:c:fHdKXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfB0l:cllllllodxdddddolcccclodo:,'',;cloooooolc;;:c:fHkXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXfBKd::lllllloddxxxxdollccllodoc;,'',cloooooolc:::::fHkXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXfBkc::cclllooodddddooc:cldxddol:;,,:cloooolc::;;,:fHOXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXfBOl::cccllloddddddoooooxxdxdlcccccccooolc:::;,':fH0XXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXKfBdcccccclllooddoooolcldxxxxo:,,,;;;:lol:::;,,,cfHKXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXKfBxcc:ccccllllccllc:;,.,:ccc,.......',;c:::;,,,dfHXXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXX0fBo::::clllc;,;::;,''''''....'......',;;;;;,,:fHkXXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXXX0fBo:c::ccl:;:c:;;;;;c::;,,,;;,,,,,''',;,,,,;xfHXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXXXXfBKd::ccclc::llc:cc:cccc:ccc:,,''';,',;,,',dfHKXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXXXXKfBk:;::;:c::;cc:;;;;;;;;;::::;,'..',',,,''lKfHXXXXXXXXXXXXXX
+XXXXXXXXXXXXXXXXXXXKfBOxc,,:c:;;,;;;cllollcccclccccc:;;;:;,''.'..;dOfHKXXXXXXXXXXXX
+XXXXXXXXXXXXK0fBkdoc;'';',,::::;,,,,cllloollc:;;::,;;;:c:;,'........,:ldxfHOKXXXXXX
+XXXXXXKOfBxol:,'''''',;;,';:::::;''';::cloooo:,,'''',:c::,,.........'.....,:cldOfHK
+00fBOxl:,....'''',,,,,;;:;,::::c:;.',,;:cclcc:::;;;,'';;,'..........'''''''.....'fH
+fB;''.........'''',,,,,,,c;,::::cc:,'',;;:::::::lc::,,,;'..........'''',,,''.....fH
+fB,''............''''''',;;:,;::ccllc;;;;:;;;;:cccc:::::,,'....',.''''',''''.....fH
+fB'''...................''',,,;::cllololcc::;;:cclc::ccc;,.....'.................fH
+fB'''....................''',;;;;:cllcclllooooolllllc::;,'...''.............''...fH
+fB'''''.....................'',:c;:ccccc::clllllllccc:;,..';'....................fH
+fB''''''........................',:::clcc::::::::cccc;';;';......................fH
+fB,,'''''..........................,;;:c:;,'',;::::ccc:,'........''''''''''''''''fH
+fB,,'''''''...........................,ccc:,,,:c:,;c:;;''''''''''',,,,,'',,,,,,,'fH
+fB;;,,,''''''.........'''''''''''.......,:;cxkkx;;c:;;,,,,;;;:;;;;;;;;;;;;;;;'.,c
+:,.,:::::'.':c:fB'..'.'fH::,;:fB,..'fH:::'fB...fH':c:'''::::::;.,:fB:.;;,.:fH:;'c:,..;cfBc;fH..,KWK
+WNccxNWWO:cNNxNNcfB.'.fHoMWxOWN;cWWOWWo.xW0kWN:.0MWkXMX'OMN,fB','fH,NMk:MWd'KWOOW0''dd,
+WWx .0WN. OMX,KWxfB.,.fHoMMcoMWcxWW0NW0.ckkkWMx.0WX.kMN'OMW0Ok:,NWXOMWdcWWllMMc.oo:
+WWx .0WN. OWX,KWx.fB;.fHoMMcoMWcxWWcdOd.kW0oWMx.0MX.kMN'OMWdNM0,NMKkMWdcWWcoMWc,XXk
+WWl..0WN' xWNdXWofB.:.fHoMMxkWW:oWWdXWk.KWOdWMk:XWK.kMX'OMW0WM0,NMk:MWd;NWkkMX,'OO;
+l:',.coo','cdddcfB,::.fHoWWdloc''codol,.;oocoo::ol;.:do.coddoo;'odc,oo;.;oddo;',ddfB;fH
+fB,;;:::ccc:cc:::cccc'fH'::.fB.;;:;;;;;;:;;,,,,,,,,;ccccc:::cccllccccccccccc:cclolloofH
diff --git a/govnos/dir.asm b/govnos/dir.asm
index 6fba23b..0bdd063 100644
--- a/govnos/dir.asm
+++ b/govnos/dir.asm
@@ -11,15 +11,15 @@ dir_main:
   mov %esi $1F0000 ; Drive letter
   lb %esi %ebx
   mov %esi dir_msg00
-  int $81
-  psh %ebx
-  int 2
+  int $91
+  mov %eax %ebx
+  int $92
   mov %esi dir_msg01
-  int $81
-  psh %ebx
-  int 2
+  int $91
+  mov %eax %ebx
+  int $92
   mov %esi dir_msg02
-  int $81
+  int $91
 
   mov %ebx 0
   mov %esi $000200
@@ -50,10 +50,9 @@ dir_main:
   cmp %eax 1
   je .notyourtime
 
-  psh ' '
-  int 2
-  psh ' '
-  int 2
+  mov %eax ' '
+  int $92
+  int $92
   mov %esi header
   mov %ebx '^@'
   mov %edx ' '
@@ -63,21 +62,20 @@ dir_main:
   mov %ecx 15
   jsr write
   pop %esi
-  psh '$'
-  int 2
+  mov %eax '$'
+  int $92
   pop %esi
   add %esi $200
   jmp .loop
 .notyourtime:
   pop %esi
-  ; psh '$'
-  ; int 2
+  ; mov %eax '$' int $92
   pop %esi
   add %esi $200
   jmp .loop
 .no_args:
   mov %esi dir_msg03
-  int $81
+  int $91
   rts
 
 dir_msg00: bytes "Volume in drive ^@"
diff --git a/govnos/govnbios.asm b/govnos/govnbios.asm
index e2a6f54..9e7227e 100644
--- a/govnos/govnbios.asm
+++ b/govnos/govnbios.asm
@@ -1,80 +1,549 @@
 /* GovnBIOS -- a basic input/output system for Govno Core 32-20020.
    BIOS is loaded into $700000 in memory.
+
+Interrupts:
+   $81 - Output string %esi to console. Uses %eax
+   $91 - Output formatted string %esi to Gravno. Uses %eax, %edx
+   $92 - Output character %eax to Gravno. Uses %edx
+   $93 - Get character from Gravno. Uses %eax-%egi, outputs in %eax
+
+   TODO: Interrupt for disk size? Expose puti?
 */
-GovnBIOS_Reset:
-  mov %esi puts
+GovnBIOS_reset:
+; Set video mode to text
+  mov %esi $49FF00
+  mov %eax $02
+  sb %esi %eax
+; Set up palette
+  mov %esi $4A0000
+  mov %egi GovnBIOS_palette
+  mov %ecx 7
+.pal:
+  ld %egi %eax
+  sd %esi %eax
+  lp .pal
+
+; Set up interrupts
+  mov %esi GovnBIOS_puts
   sti $81
-  mov %esi CLEARSCR
-  int $81
-  mov %esi WELCOMEMSG
-  int $81
 
-  mov %egi 0
-.loop:
-  mov %esi 0
-  mov %eax $DEAF
-  ldds %egi
-  cmp %eax $DEAF
-  je .ascan
-  mov %esi DISKMSG
-  int $81
-  mov %eax %egi
-  add %eax $31
+  mov %esi GovnBIOS_vputc
+  sti $92
+  mov %esi GovnBIOS_vputs
+  sti $91
+  mov %esi GovnBIOS_vgetc
+  sti $93
+
+  jmp GovnBIOS_post
+
+; Serial I/O
+GovnBIOS_puts:
+  lb %esi %eax
+  cmp %eax 0
+  je .iend
   psh %eax
   int 2
-  psh $0A
-  int 2
-  inx %egi
-  jmp .loop
+  jmp GovnBIOS_puts
+.iend:
+  irts
 
-.ascan:
+; BEGIN Gravno text mode
+GovnBIOS_vputs:
+  lb %esi %eax
+  cmp %eax 0
+  je .iend
+  cmp %eax $1C
+  je .esc
+  int $92
+  jmp GovnBIOS_vputs
+.iend:
+  ; int $11
+  irts
+.esc:
+  lb %esi %eax
+  cmp %eax 'f'
+  je .setfg
+  cmp %eax 'b'
+  je .setbg
+  cmp %eax 'r'
+  je .reset
+  cmp %eax 'u'
+  je .up
+  cmp %eax 'c'
+  je .setcol
+  cmp %eax 'l'
+  je .setline
+  cmp %eax 'z'
+  je .zeroscr
+  jmp GovnBIOS_vputs
+
+.setfg:
+  mov %edx $F0
+  bytes $D0 $00 GovnBIOS_cur.c
+  and %eax %edx
+  lb %esi %edx
+  sub %edx 'A'
+  ora %eax %edx
+  bytes $E0 $00 GovnBIOS_cur.c
+  jmp GovnBIOS_vputs
+
+.setbg:
+  mov %edx $0F
+  bytes $D0 $00 GovnBIOS_cur.c
+  and %eax %edx
+  lb %esi %edx
+  sub %edx 'A'
+  sal %edx 4
+  ora %eax %edx
+  bytes $E0 $00 GovnBIOS_cur.c
+  jmp GovnBIOS_vputs
+
+.setcol:
+  jsr .getnum
+  cmp %eax 80
+  jn .colok
+  mov %eax 59
+.colok:
+  psh %eax
+  bytes $D8 $00 GovnBIOS_cur.posh
+  div %eax 80
+  mul %eax 80
+  pop %edx
+  add %eax %edx
+  bytes $E8 $00 GovnBIOS_cur.posh
+  jmp GovnBIOS_vputs
+
+.setline:
+  jsr .getnum
+  cmp %eax 60
+  jn .lineok
+  mov %eax 59
+.lineok:
+  psh %eax
+  bytes $D8 $00 GovnBIOS_cur.posh
+  div %eax 80
+  pop %eax
+  mul %eax 80
+  add %eax %edx
+  bytes $E8 $00 GovnBIOS_cur.posh
+  jmp GovnBIOS_vputs
+
+.up:
+  jsr .getnum
+  psh %eax
+  bytes $D8 $00 GovnBIOS_cur.posh
+  div %eax 80
+  pop %edx
+  sub %eax %edx
+  cmp %eax 0
+  js .okup
+  mov %eax 0
+.okup:
+  mul %eax 80
+  bytes $E8 $00 GovnBIOS_cur.posh
+  jmp GovnBIOS_vputs
+
+.reset:
+  mov %eax $07
+  bytes $E0 $00 GovnBIOS_cur.c
+  jmp GovnBIOS_vputs
+
+.zeroscr:
+  mov %edx $4F0000
+  bytes $D0 $00 GovnBIOS_cur.c
+  sal %eax 8
+.loop:
+  sw %edx %eax
+  cmp %edx $4F2580
+  jne .loop
+  mov %eax 0
+  bytes $E8 $00 GovnBIOS_cur.posh
+  jmp GovnBIOS_vputs
+.getnum:
+  lb %esi %eax
+  sub %eax '0'
+  mul %eax 10
+  lb %esi %edx
+  sub %edx '0'
+  add %eax %edx
+  dex %eax
+  cmp %eax 0
+  rs
+  pop %eax
+  jmp GovnBIOS_vputs
+
+GovnBIOS_vputi:
+  psh 0
+  mov %ebx 10
+.l:
+  div %eax %ebx
+  add %edx '0'
+  psh %edx
+  cmp %eax 0
+  jne .l
+  mov %ebx 0
+.l2:
+  pop %eax
+  cmp %eax 0
+  re
+  inx %ebx
+  int $92
+  jmp .l2
+
+GovnBIOS_vputc:
+  psh %eax
+  cmp %eax '$'
+  je .nl
+  cmp %eax $08
+  je .bs
+  ; mov %edx (U16)...
+  bytes $D8 $03 GovnBIOS_cur.posh
+  add %edx %edx
+  add %edx $4F0000
+  ; draw
+  sb %edx %eax
+  ; mov %eax (U8)...
+  bytes $D0 $00 GovnBIOS_cur.c
+  sb %edx %eax
+
+  ; Increment
+  bytes $D8 $03 GovnBIOS_cur.posh
+  inx %edx
+  ; mov (U16)... %edx
+  cmp %edx 4800
+  js .scroll
+  bytes $E8 $03 GovnBIOS_cur.posh
+  pop %eax
+  irts
+.nl:
+  bytes $D8 $00 GovnBIOS_cur.posh
+  div %eax 80
+  inx %eax
+  mul %eax 80
+  cmp %eax 4800
+  js .scroll
+  bytes $E8 $00 GovnBIOS_cur.posh
+  int $11
+  pop %eax
+  irts
+.bs:
+  bytes $D8 $00 GovnBIOS_cur.posh
+  cmp %eax 0
+  je .end
+  dex %eax
+  bytes $E8 $00 GovnBIOS_cur.posh
+.end:
+  pop %eax
+  irts
+.scroll:
+; Uh oh!
+  mov %edx $4F00A0
+.sloop:
+  ld %edx %eax
+  sub %edx 164
+  sd %edx %eax
+  add %edx 160
+  cmp %edx $4F2580
+  jn .sloop
+; Erase last line
+  sub %edx 160
+  bytes $D0 $00 GovnBIOS_cur.c
+  sal %eax 8
+.eloop:
+  sw %edx %eax
+  cmp %edx $4F2580
+  jn .eloop
+
+  mov %eax 4720
+  bytes $E8 $00 GovnBIOS_cur.posh
+  pop %eax
+  irts
+
+GovnBIOS_vgetc:
+  psh %ebx psh %ecx psh %esi psh %egi
+  mov %egi 0 ; 0 - cell clear
+  jsr .invert
+  mov %ebx 0 ; 0 - wait for press, >=1 - key, wait for unpress
+  mov %ecx 0
+.loop:
+  jsr GovnBIOS_getnorkey
+  cmp %ebx 0
+  je .waiter
+  cmp %eax 0
+  jne .achk
   cmp %egi 0
-  jne .hazdisk
-  mov %esi NO_DISKS
-  int $81
-  int $1
-  mov %esi CLEARSCR
-  int $81
-  hlt
-.hazdisk:
+  je .dontclear
+  jsr .invert
+.dontclear:
+  mov %eax %ebx
+  pop %egi pop %esi pop %ecx pop %ebx
+  irts
+.waiter:
+  cmp %eax 0
+  je .achk
+  cmp %eax $39
+  jn .txtkey
+  sub %eax $39
+  mov %esi .extra
+  add %esi %eax
+  lb %esi %ebx
+  jmp .achk
+.txtkey:
+  sub %eax 4
+  jsr GovnBIOS_getmodkey
+  mul %edx 53
+  mov %esi .layout
+  add %esi %edx
+  add %esi %eax
+  lb %esi %ebx
+.achk:
+  mov %edx 33
+  int $22
+  inx %ecx
+  cmp %ecx 15
+  jne .loop
+
+.blink:
+  psh .loop
+; flasher 3000
+.invert:
+  bytes $D8 $02 GovnBIOS_cur.posh
+  add %ecx %ecx
+  add %ecx $4F0001
+  lb %ecx %eax
+  mov %edx %eax
+  not %eax
+  dex %ecx
+  sb %ecx %eax
+  int $11
+  not %egi
+  mov %ecx 0
+  rts
+.layout: bytes "abcdefghijklmnopqrstuvwxyz1234567890" $0A $1B $7F $09 " -=[]\`;'`,./"
+.shiftd: bytes "ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#^$%^^&*()" $0A $1B $7F $09 " _+{}|~:\"~<>?"
+.extra:  bytes $13 $E0 $E1 $E2 $E3 $E4 $E5 $E6 $E7 $E8 $E9 $EA $EB $14 $17 $12 $07 $C3 $C2 $FE $B4 $C1 $10 $11 $1F $1E
+
+GovnBIOS_getmodkey: ; %edx - Mod bitmask
+  mov %esi $480005
+.sloop:
+  lb %esi %edx
+; Shift only for now
+  cmp %edx $E1
+  je .setshift
+  cmp %edx $E5
+  je .setshift
+  cmp %esi $48000B
+  jne .sloop
+  mov %edx 0
+  rts
+.setshift:
+  mov %edx 1
+  rts
+
+GovnBIOS_getnorkey: ; %eax - Key
+  mov %eax 0
+  mov %esi $480005
+.loop:
+  lb %esi %eax
+  cmp %eax 4
+  jn .aloop
+; *Lock keys
+  cmp %eax $39
+  je .aloop
+  cmp %eax $47
+  je .aloop
+  cmp %eax $53
+  rn
+.aloop:
+  cmp %esi $48000B
+  jne .loop
+  rts
+; END Gravno text mode
+
+; BEGIN Info screen
+GovnBIOS_post:
+  ; Output first 3 lines
+  mov %esi INTROMSG
+  int $91
+
+  ; Get CPU info
+  int $A
+  mov %egi CPUMSGDAT
+  sd %egi %eax
+  sd %egi %ebx
+  sd %egi %ecx
+  sd %egi %edx
+  sd %egi %esi
+; Find end and replace it
+  mov %egi CPUMSGDAT
+  mov %ecx 19
+.nonul:
+  lb %egi %eax
+  cmp %eax 0
+  je .cidend
+  lp .nonul
+.cidend:
+  dex %egi
+  mov %eax $204F661C ; "^\fO "
+  sd %egi %eax
+  mov %eax ']'
+  sb %egi %eax
+
+  mov %esi RAMMSGPRE
+  int $91
+  mov %eax %e8
+  div %eax $100000
+  jsr GovnBIOS_vputi
+  mov %esi RAMMSGSUF
+  int $91
+
+  mov %esi VIDMSG
+  int $91
+
+  mov %esi CPUMSGPRE
+  int $91
+
+  jsr GovnBIOS_showdisks
+  ; Disk initialization does take a long time
+  ; So beep...
+  mov %edx $0C00
+  mov %esi 1000
+  mov %eax 7
+  int $23
+
+  cmp %egi 0
+  jne .z
+  mov %esi NODISKSMSG
+  int $91
+
+.z:
   mov %esi PROMPT
-  int $81
+  int $91
+
 .query:
-  int 1
-  pop %eax
+  int $93
   cmp %eax '0'
-  je .quit
-  cmp %eax $31
-  jn .err
-  cmp %eax $3A
-  js .err
-  sub %eax $31
-  cmp %eax %egi
-  js .err
-  add %eax $31
-  psh %eax
-  int 2
-  psh $0A
-  int 2
-  sub %eax $31
+  je .shut
+  cmp %eax '1'
+  jn .beep
+  cmp %eax '9'
+  js .beep
+; Check if bootloader OK
+  mov %egi %eax
+  sub %egi '1'
 
-  psh %eax
-  mov %esi CLEARSCR
-  int $81
-  pop %e9
-  jmp GovnBIOS_Boot
+  mov %eax 0
+  mov %esi $C00000
+  ldds %egi
+  cmp %eax 0
+  je .beep
 
-.err:
-  psh '?'
-  int 2
-  psh $8
-  int 2
-  js .query
-.quit:
-  mov %esi CLEARSCR
-  int $81
+; Echo
+  mov %eax %egi
+  add %eax '1'
+  int $92
+  mov %eax '$'
+  int $92
+  int $11
+; boot
+  mov %e9 %egi
+  jmp GovnBIOS_Boot
+.beep:
+  mov %esi 262
+  mov %edx $0C00
+  mov %eax 15
+  int $23
+  jmp .query
+.shut:
   hlt
 
+.smartsleep:
+  psh %edx
+  mov %edx 8
+  int $22
+  pop %edx
+  sub %edx 8
+  cmp %edx 0
+  js .smartsleep
+  rts
+
+GovnBIOS_showdisks:
+  mov %egi 0
+  mov %ecx 0
+.loop:
+  mov %esi 0
+  mov %eax $100
+  ldds %ecx
+  cmp %eax $100
+  jne .fnd
+.aloop:
+  inx %ecx
+  cmp %ecx 8
+  jne .loop
+  rts
+.fnd:
+  inx %egi
+  mov %esi .diskprefix
+  int $91
+  mov %eax '1'
+  add %eax %ecx
+  int $92
+
+; GovnFS 2 detector
+  mov %esi 0
+  ldds %ecx
+  cmp %eax $42
+  jne .notgfs2
+  mov %eax ' '
+  int $92
+  mov %esi $10
+  ldds %ecx
+  int $92
+  mov %eax '/'
+  int $92
+.notgfs2:
+
+  mov %esi .diskinfix
+  int $91
+
+.binsearch:
+  mov %ebx 0
+  mov %edx $7FFFFFFF
+.iter:
+  mov %esi %ebx
+  add %esi %edx
+  sar %esi 1
+  mov %eax $100
+  ldds %ecx
+  cmp %eax $100
+  je .nah
+  mov %ebx %esi
+  jmp .chk
+.nah:
+  mov %edx %esi
+  inx %edx
+.chk:
+  psh %esi
+  mov %esi %edx
+  sub %esi %ebx
+  cmp %esi 3
+  pop %esi
+  js .iter
+  mov %eax %esi
+  inx %eax ; %esi is last byte on disk
+  div %eax $100000
+  jsr GovnBIOS_vputi
+  mov %esi .disksuffix
+  int $91
+  jmp .aloop
+
+
+.diskprefix: bytes " Disk ^@"
+.diskinfix: bytes ": ^@"
+.disksuffix: bytes "MiB$^@"
+; END Info screen
+
+; booter
 GovnBIOS_Boot:
   mov %esi $C00000
   mov %egi $030000
@@ -92,36 +561,40 @@ GovnBIOS_Boot:
   sb %egi %eax
   jmp .loop
 .boot:
-  ; Artificial boot delay so that user sees drive number echo
-  mov %edx 128
-  int $22
   ; clear registers
-  xor %edx %edx
   xor %eax %eax
+  xor %ebx %ebx
+  xor %ecx %ecx
+  xor %edx %edx
   xor %esi %esi
   xor %egi %egi
+  xor %e8 %e8 ; From cpuid
   ; E9 is not cleared so that os knows what disk it is booting from :D
   jmp $030000
 
-puts:
-  lb %esi %eax
-  cmp %eax 0
-  je .iend
-  psh %eax
-  int 2
-  jmp puts
-.iend:
-  irts
+GovnBIOS_palette: bytes $00 $00 $00 $54 $A0 $02 $40 $55 $15 $00 $15 $54 $B5 $02 $B5 $56 $4A $29 $4A $7D $EA $2B $EA $7F $5F $29 $5F $7D $FF $2B $FF $7F
+
+GovnBIOS_cur: .posh: reserve 2 bytes .c: reserve 1 bytes
+
+INTROMSG:
+  bytes "^\rGovnBIOS [" $FB "] Gravno power we need but don't implement$"
+  bytes "(C) 2025 " $F0 "816 & ^\bP ^\bA Roma$$"
+  bytes "^\fOBoot   [ ^\fLHOLY^\fO ]$^@"
+
+RAMMSGPRE: bytes "RAM    [ ^\fK^@"
+RAMMSGSUF: bytes " MiB OK^\fO ]^@"
+VIDMSG:    bytes "^\c35Video  [ ^\fKGG69-4932 (mode 2)^\fO ]$^@"
+CPUMSGPRE: bytes "CPU    [ ^\fK"
+CPUMSGDAT: bytes "                         "
+
+  bytes "^\c35FPU    [ ^\fKFlot^\fO ]$"
+  bytes "HDD    [ ^\fLTODO^\fO ]^\c35Color  [ ^\fAA^\fBB^\fCC^\fDD^\fEE^\fFF^\fGG^\fHH^\fII^\fJJ^\fKK^\fLL^\fMM^\fNN^\fOO^\fPP^\fO ]$$^\r^@"
 
-; ANSI MAGIC HAPPENS HERE
-CLEARSCR:      bytes "^[[0m^[[H^[[2J^@"
-WELCOMEMSG:    bytes "^[[48;5;17m^[[H^[[2J^[[30m^[[48;5;253m^[[KGovnBIOS 7E9        Choose a disk to boot from$"
-               bytes "^[[s^[[999B^[[30m^[[48;5;253m^[[K^[[999D1-8=Choose          0=Shutdown^[[48;5;232m^[[u^[[48;5;17m^[[97m^@"
-DISKMSG:       bytes "  Disk #^@"
-NO_DISKS:      bytes "^[[48;5;17m^[[97m^[[H^[[2JGovnOS 0.8$Copyright 7E8-7E9 © Xi816$$"
-               bytes "Error -24 reading 1 sectors at 0, disk fd0$"
-               bytes "The boot device could not be identified$"
-               bytes "Initialization failed. Press any key (or the \"reset\" button) to shutdown.$^@"
-PROMPT:        bytes "> ^@"
-; biosBSE:     bytes $AA $55 - ne nado!
+NODISKSMSG:
+  bytes "^\fL" $20 $20 $DB $DB " ^\fPTBo" $96 " gucK -- B c " $89 "$"
+  bytes "^\fL" $20 $DB $DF $20 " ^\fP$"
+  bytes "^\fL" $DB $DB $DB $DB " ^\fHGovnFloppy " $E3 "og" $E3 "uca" $EF" ykaZ. Te" $E3 "epb HE" $EF "b3A.$"
+  bytes "^\fL" $20 $20 $DB $20 " ^\fP$"
+  bytes "^\fL" $20 $DB $20 $20 " ^\fMKu" $EB "ep" $E2 "oBno2. " $E3 "og" $E3 "uca" $E7 "ca^\r$^@"
 
+PROMPT:        bytes "$Choose disk by number or press 0 to shutdown:$^\bJ^\fA^P^\bE^\fJ^P^\bP^\fE^P^\bA^\fP^P^\r^@"
diff --git a/govnos/gsfetch.asm b/govnos/gsfetch.asm
index bcce8d7..9001eab 100644
--- a/govnos/gsfetch.asm
+++ b/govnos/gsfetch.asm
@@ -1,22 +1,22 @@
 govnos_gsfetch:
   mov %esi gsfc_000
-  int $81
+  int $91
 
   ; Hostname
   mov %esi gsfc_001
-  int $81
+  int $91
   mov %esi env_HOST
-  int $81
+  int $91
 
   ; OS name
   mov %esi gsfc_002
-  int $81
+  int $91
   mov %esi env_OS
-  int $81
+  int $91
 
   ; CPU name
   mov %esi gsfc_003
-  int $81
+  int $91
   int $A ; cpuid
   mov %egi env_CPU
   sd %egi %eax
@@ -25,89 +25,83 @@ govnos_gsfetch:
   sd %egi %edx
   sd %egi %esi
   mov %esi env_CPU
-  int $81
-  psh '$'
-  int $2
+  int $91
 
   ; Memory
   mov %esi gsfc_004
-  int $81
+  int $91
   mov %eax bse
   sub %eax $030002
   jsr b_puti
   mov %esi gsfc_005
-  int $81
+  int $91
   div %e8 1024
   mov %eax %e8
   jsr b_puti
   mov %esi gsfc_010
-  int $81
+  int $91
 
   ; Disk space
   mov %esi gsfc_008
-  int $81
+  int $91
   jsr fre_sectors
   mul %eax 512
   jsr b_puti
   mov %esi gsfc_009
-  int $81
+  int $91
 
   mov %esi gsfc_006
-  int $81
+  int $91
   mov %ecx 7 ; 8 colors
-  mov %eax $30
+  mov %eax 'A'
 .gsfcL1:
-  psh '^[' int $2
-  psh '['  int $2
-  psh '4'  int $2
-  psh %eax  int $2
-  psh 'm'  int $2
-  psh ' '  int $2
-  psh ' '  int $2
-  psh ' '  int $2
+  mov %esi gsfc_ctx
+  sb %esi %eax
+  mov %esi gsfc_ct
+  psh %eax
+  int $91
+  pop %eax
   inx %eax
   lp .gsfcL1
 
   mov %esi gsfc_007
-  int $81
+  int $91
   mov %esi gsfc_006
-  int $81
+  int $91
   mov %ecx 7 ; 8 colors
-  mov %eax $30
+  mov %eax 'I'
 .gsfcL2:
-  psh '^[' int $2
-  psh '['  int $2
-  psh '1'  int $2
-  psh '0'  int $2
-  psh %eax  int $2
-  psh 'm'  int $2
-  psh ' '  int $2
-  psh ' '  int $2
-  psh ' '  int $2
+  mov %esi gsfc_ctx
+  sb %esi %eax
+  mov %esi gsfc_ct
+  psh %eax
+  int $91
+  pop %eax
   inx %eax
   lp .gsfcL2
   mov %esi gsfc_007
-  int $81
+  int $91
 
   mov %esi gsfc_logo
-  int $81
+  int $91
 
   jmp shell.aftexec
 
-gsfc_000:    bytes "             ^[[1;33mgsfetch$^[[0m             ---------$^@"
-gsfc_001:    bytes "             ^[[1;33mHost: ^[[0m^@"
-gsfc_002:    bytes "$             ^[[1;33mOS: ^[[0m^@"
-gsfc_003:    bytes "$             ^[[1;33mCPU: ^[[0m^@"
-gsfc_004:    bytes "             ^[[1;33mMemory: ^[[0m^@"
+gsfc_000:    bytes "             ^\fLgsfetch$^\r             ---------$^@"
+gsfc_001:    bytes "             ^\fLHost: ^\r^@"
+gsfc_002:    bytes "$             ^\fLOS: ^\r^@"
+gsfc_003:    bytes "$             ^\fLCPU: ^\r^@"
+gsfc_004:    bytes "$             ^\fLMemory: ^\r^@"
 gsfc_005:    bytes " B/^@"
 gsfc_010:    bytes " KiB$^@"
 gsfc_006:    bytes "             ^@"
-gsfc_007:    bytes "^[[0m$^@"
-gsfc_008:    bytes "             ^[[1;33mDisk space used: ^[[0m^@"
+gsfc_007:    bytes "^\r$^@"
+gsfc_008:    bytes "             ^\fLDisk space used: ^\r^@"
 gsfc_009:    bytes " B/16 MiB$$^@"
-gsfc_logo:   bytes "^[[10A^[[33m  .     . .$"
+gsfc_logo:   bytes "^\u10^\fD  .     . .$"
              bytes            "     A     .$"
              bytes            "    (=) .$"
              bytes            "  (=====)$"
-             bytes            " (========)^[[0m$$$$$$^@"
-
+             bytes            " (========)^\r$$$$$$^@"
+gsfc_ct:     bytes "^\b"
+gsfc_ctx:    bytes "A  ^@"
diff --git a/govnos/gsh.asm b/govnos/gsh.asm
index 3a99878..067c58c 100644
--- a/govnos/gsh.asm
+++ b/govnos/gsh.asm
@@ -5,10 +5,10 @@
   jmp gshMain
 gshMain:
   mov %esi gshWelcome
-  int $81
+  int $91
 gshShell:
   mov %esi gshPS1
-  int $81
+  int $91
 
   mov %esi scans_len
   mov %eax $0000
@@ -59,21 +59,20 @@ gshShell:
   jmp gshAftexec
 gshHi:
   mov %esi gshHw
-  int $81
+  int $91
   jmp gshAftexec
 gshHelp:
   mov %esi gshHelpMsg
-  int $81
+  int $91
   jmp gshAftexec
 gshExit:
   rts
 gshBadComm:
-  psh '"'
-  int $02
+  mov %eax '"' int $92
   mov %esi gshCommand
-  int $81
+  int $91
   mov %esi gshBadCommMsg
-  int $81
+  int $91
   jmp gshAftexec
 
 gshAftexec:
diff --git a/govnos/gtutor.asm b/govnos/gtutor.asm
index 37bf5df..672f5f2 100644
--- a/govnos/gtutor.asm
+++ b/govnos/gtutor.asm
@@ -1,9 +1,8 @@
 gtutor_main:
   mov %esi gtutor_msg00
-  int $81
+  int $91
 
-  int $01
-  pop %edx
+  int $93
 
   rts
 
diff --git a/govnos/info.txt b/govnos/info.txt
index 714b9d69fbefa1250e5bc7a5fd110b60d409da30..13193127aab087e355c8f5628e82531eb52b1983 100644
GIT binary patch
delta 34
pcma#@XO>BGnaHgyXs%~qrsry@pkZXHYhbQxU^dZSlv$>T3jly32M_=N

delta 62
zcmeZ|;+Bp!wy-v}HZ(TKoye@LW2R?dspo2`pkZXHYhb2pV5!Nak*ui@k!fLQrlVkF
RYOH0UZOA1ZZIH{r1puLU45$DA

diff --git a/govnos/krnl.asm b/govnos/krnl.asm
index 3f83825..dbf1af1 100644
--- a/govnos/krnl.asm
+++ b/govnos/krnl.asm
@@ -9,8 +9,10 @@ write:
   dex %ecx
 .lp:
   lb %esi %eax
-  psh %eax
-  int $02
+  cmp %eax 0
+  je .z
+  int $92
+.z:
   lp .lp
   pop %eax
   rts
@@ -76,8 +78,10 @@ strcmp:
 scani:
   mov %eax $00
 .lp:
-  int $01
-  pop %ebx
+  psh %eax
+  int $93
+  mov %ebx %eax
+  pop %eax
 
   cmp %ebx $0A ; Check for Enter
   re
@@ -91,8 +95,12 @@ scani:
   jg .lp
 
   mul %eax 10
-  psh %ebx
-  int $02
+
+  psh %eax
+  mov %eax %ebx
+  int $92
+  pop %eax
+
   sub %ebx 48
   add %eax %ebx
   jmp .lp
@@ -103,7 +111,7 @@ scani:
 .back_strict:
   mov %esi krnl_bksp_seq
   psh %eax
-  int $81
+  int $91
   pop %eax
   div %eax 10
   jmp .lp
@@ -112,14 +120,12 @@ scani:
 ; Arguments:
 ;   si -- buffer address
 scans:
-  int 1
-  pop %eax
+  int $93
   cmp %eax $7F
   je .back
   cmp %eax $1B
   je scans
-  psh %eax
-  int 2
+  int $92
   cmp %eax $0A
   je .end
   sb %esi %eax
@@ -133,7 +139,7 @@ scans:
 .back_strict:
   psh %esi
   mov %esi krnl_bksp_seq
-  int $81
+  int $91
   pop %esi
   dex %esi
   dex @scans_len
@@ -193,11 +199,8 @@ dmemcpy:
 
 krnl_panic:
   mov %esi krnl_panic00
-  int $81
-  int 1
-  pop %edx
-  mov %esi krnl_show_cursor
-  int $81
+  int $91
+  int $93
   hlt
 
 ; kmain executes when the kernel loads
@@ -206,7 +209,7 @@ kmain:
 
 ; Constants/data
 krnl_bksp_seq: bytes "^H ^H^@"
-krnl_panic00:  bytes "^[[44m^[[H^[[2J^[[?25l$"
+krnl_panic00:  bytes "^\bE^\z$"
                bytes "A problem has been detected and GovnOS has been down to prevent damage$"
                bytes "to your computer.$$"
                bytes "UNKNOWN_DETECTED_ERROR$$"
@@ -218,6 +221,6 @@ krnl_panic00:  bytes "^[[44m^[[H^[[2J^[[?25l$"
                bytes "for any Govno Core / GovnOS updates you might need.$$"
                bytes "If problems continue, disable or remove any newly installed hardware$"
                bytes "or software. Do not change BIOS if you don't know how to do it properly.$$"
-               bytes "Press any key to shut down"
+               bytes "Press any key to shut down$"
                bytes "^@"
 krnl_show_cursor: bytes "^[[0m^[[H^[[2J^[[?25h^@"
diff --git a/lib/cpu32/cli.h b/lib/cpu32/cli.h
index 871e964..d4b9367 100644
--- a/lib/cpu32/cli.h
+++ b/lib/cpu32/cli.h
@@ -1,5 +1,6 @@
 // The CLI for using the emulator
 #include <cpu32/gpuh.h>
+#include <cpu32/spuh.h>
 #include <cpu32/cpu32h.h>
 #define GC24_VERSION "0.0.1"
 #define EXEC_START 1
diff --git a/lib/cpu32/cpu32.h b/lib/cpu32/cpu32.h
index 6e81f5f..d64166d 100644
--- a/lib/cpu32/cpu32.h
+++ b/lib/cpu32/cpu32.h
@@ -343,10 +343,10 @@ U8 INT(GC* gc) {
     return 0;
   }
   U8 i = gc->mem[gc->EPC+1];
-  INTERRUPTS[i](gc, i);
+  i = INTERRUPTS[i](gc, i);
 
   intend: gc->EPC += 2;
-  return 0;
+  return i;
 }
 
 // 42           dex @imm32
@@ -1006,8 +1006,7 @@ U8 INT_WAI(GC* gc, U8 I) { // 22 wait
 }
 
 U8 INT_BEP(GC* gc, U8 I) { // 23 beep
-  double freq = (double)StackPop(gc);
-  PlayBeep(freq);
+  GAsnd(&(gc->ga), gc->reg[ESI], gc->reg[EDX], gc->reg[EAX]);
   return 0;
 }
 
@@ -1077,10 +1076,10 @@ U0 Reset(GC* gc) {
   for (i = 0; i < 32; i++)
     gc->reg[i] = 0x00000000;
   gc->reg[ESP] = 0x00FEFFFF;
-  gc->reg[EBP] = 0x00FEFFFF;
+  gc->reg[EBP] = gc->reg[ESP];
   // Adjust ESP+/EBP+ extra registers
-  gc->reg[R22] = 0x00FEFFFF;
-  gc->reg[R23] = 0x00FEFFFF;
+  gc->reg[R22] = gc->reg[ESP];
+  gc->reg[R23] = gc->reg[ESP];
 
   gc->PS = 0b01000000;
 }
@@ -1122,7 +1121,6 @@ U0 RegDump(GC* gc) {
 U8 Exec(GC* gc, U8 verbosemode) {
   U8 exc = 0;
   U32 insts = 0;
-  SDL_ShowCursor(SDL_DISABLE);
   execloop:
     // printf("%08X\n", gc->EPC);
     exc = (INSTS[gc->mem[gc->EPC]])(gc);
diff --git a/lib/cpu32/cpu32h.h b/lib/cpu32/cpu32h.h
index fcd2cd4..95ecdbc 100644
--- a/lib/cpu32/cpu32h.h
+++ b/lib/cpu32/cpu32h.h
@@ -36,8 +36,10 @@ struct GC32 {
   U8 pin;
 
   // GPU
-  gc_gg16 gg;
-  SDL_Renderer* renderer;
+  gc_gg32 gg;
+
+  // SPU
+  gc_ga32 ga;
 };
 typedef struct GC32 GC;
 void PlayBeep(double frequency);
diff --git a/lib/cpu32/gpu.h b/lib/cpu32/gpu.h
index 643dbf6..41fdb77 100644
--- a/lib/cpu32/gpu.h
+++ b/lib/cpu32/gpu.h
@@ -42,52 +42,69 @@ enum ggcolors {
   EWHITE   = 15,
 };
 
-U0 GGinit(gc_gg16* gg, SDL_Renderer* r, U8 scale) {
-  gg->status = 0b00000000;
+U0 GGinit(gc_gg32* gg, U8 scale) {
+  SDL_Init(SDL_INIT_VIDEO | SDL_INIT_AUDIO);
+  SDL_SetAppMetadata("GovnoCore 32-20020", "32-20020", "io.github.xi816.gc32-20020");
   gg->scale = scale;
-  SDL_SetRenderDrawColor(r, 0, 0, 0, 255);
-  SDL_RenderClear(r);
+  gg->win = SDL_CreateWindow("Gravno Display Pro", WINW * scale, WINH * scale, SDL_WINDOW_HIGH_PIXEL_DENSITY);
+  gg->surf = SDL_CreateSurface(WINW, WINH, SDL_PIXELFORMAT_INDEX8);
+  gg->pal = SDL_CreatePalette(256);
+  SDL_SetSurfacePalette(gg->surf, gg->pal);
+  gg->status = 0b00000000;
+  SDL_HideCursor();
+  SDL_UpdateWindowSurface(gg->win);
+}
+
+U0 GGstop(gc_gg32* gg) {
+  SDL_DestroyPalette(gg->pal);
+  SDL_DestroySurface(gg->surf);
+  SDL_DestroyRenderer(gg->rndr);
+  SDL_DestroyWindow(gg->win);
+  SDL_Quit();
+}
+
+U0 GGupload(GC* gc) {
+  gc->gg.surf->pixels = gc->mem + 0x400000;
+  SDL_BlitSurfaceScaled(gc->gg.surf, 0, SDL_GetWindowSurface(gc->gg.win), 0, SDL_SCALEMODE_NEAREST);
+  SDL_UpdateWindowSurface(gc->gg.win);
 }
 
 U0 GGflush(GC* gc) {
   U8 byte = gc->mem[0x450000];
-  U16 palitro = (gc->mem[0x4A0000+2*byte]) + (gc->mem[0x4A0001+2*byte] << 8);
+  //U16 palitro = (gc->mem[0x4A0000+2*byte]) + (gc->mem[0x4A0001+2*byte] << 8);
   byte = gc->mem[0x450000];
-  SDL_SetRenderDrawColor(gc->renderer,
-    ((palitro&0b0111110000000000)>>10)*8, // R
-    ((palitro&0b0000001111100000)>>5)*8,  // G
-    ((palitro&0b0000000000011111))*8,     // B
-    0xFF);
+  // SDL_SetRenderDrawColor(gc->renderer,
+  //   ((palitro&0b0111110000000000)>>10)*8, // R
+  //   ((palitro&0b0000001111100000)>>5)*8,  // G
+  //   ((palitro&0b0000000000011111))*8,     // B
+  //   0xFF);
   memset(gc->mem+0x400000, byte, VGASIZE);
   // SDL_RenderPresent(gc->renderer);
 }
 
 U0 GGpage_CGA16(GC* gc) {
-  U8 byte;
-  U32 i;
-  for (i = 0; i < VGASIZE; i++) {
-    byte = gc->mem[0x00400000+i];
-    SDL_SetRenderDrawColor(gc->renderer, rgbv[byte%16].r, rgbv[byte%16].g, rgbv[byte%16].b, 0xFF);
-    SDL_RenderDrawPoint(gc->renderer, i%WINW, i/WINW);
+  U16 i;
+  for (i = 0; i < 256; i++) {
+    gc->gg.pal->colors[i].r = rgbv[i%16].r;
+    gc->gg.pal->colors[i].g = rgbv[i%16].g;
+    gc->gg.pal->colors[i].b = rgbv[i%16].b;
+    gc->gg.pal->colors[i].a = 0xFF;
   }
-  SDL_RenderPresent(gc->renderer);
+  GGupload(gc);
 }
 
 U0 GGpage_RGB555LE(GC* gc) {
-  U8 byte;
+  U16 i;
   U16 palitro;
-  U32 i;
-  for (i = 0; i < VGASIZE; i++) {
-    byte = gc->mem[0x400000+i];
-    palitro = (gc->mem[0x4A0000+2*byte]) + (gc->mem[0x4A0001+2*byte] << 8);
-    SDL_SetRenderDrawColor(gc->renderer,
-      ((palitro&0b0111110000000000)>>10)*8, // R
-      ((palitro&0b0000001111100000)>>5)*8,  // G
-      ((palitro&0b0000000000011111))*8,     // B
-      0xFF);
-    SDL_RenderDrawPoint(gc->renderer, i%WINW, i/WINW);
+  for (i = 0; i < 256; i++) {
+    palitro = (gc->mem[0x4A0000+2*i]) + (gc->mem[0x4A0001+2*i] << 8);
+    gc->gg.pal->colors[i].r = ((palitro&0b0111110000000000)>>10)*8;
+    gc->gg.pal->colors[i].g = ((palitro&0b0000001111100000)>>5)*8;
+    gc->gg.pal->colors[i].b = ((palitro&0b0000000000011111))*8;
+    gc->gg.pal->colors[i].a = 0xFF;
   }
-  SDL_RenderPresent(gc->renderer);
+  GGupload(gc);
+
 }
 
 U0 GGpage_text(GC* gc) {
diff --git a/lib/cpu32/gpuh.h b/lib/cpu32/gpuh.h
index 1744f36..7220d56 100644
--- a/lib/cpu32/gpuh.h
+++ b/lib/cpu32/gpuh.h
@@ -1,30 +1,21 @@
-#ifndef GPU16H_H
-#define GPU16H_H 1
+#ifndef GPU32H_H
+#define GPU32H_H 1
 
-#include <SDL2/SDL.h>
+#include <SDL3/SDL.h>
 
 #define WINW 640
 #define WINH 480
 #define VGASIZE WINW*WINH // 307,200
 
-#define gravno_start \
-  SDL_Init(SDL_INIT_EVERYTHING); \
-  SDL_Window* WIN = SDL_CreateWindow( \
-      "Gravno Display", 500, 100, WINW * scale, WINH * scale, SDL_WINDOW_SHOWN); \
-  SDL_Renderer* renderer = SDL_CreateRenderer( \
-      WIN, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);\
-  SDL_RenderSetScale(renderer, scale, scale);
-
-#define gravno_end \
-  SDL_DestroyRenderer(renderer); \
-  SDL_DestroyWindow(WIN); \
-  SDL_Quit();
-
-struct gc_gg16 {
+struct gc_gg32 {
   U8 status; // besplatno
   U8 scale; // platno
+  SDL_Window* win;
+  SDL_Renderer* rndr;
+  SDL_Surface* surf;
+  SDL_Palette* pal;
 };
-typedef struct gc_gg16 gc_gg16;
+typedef struct gc_gg32 gc_gg32;
 
 struct ggrgb {
   U8 r;
diff --git a/lib/cpu32/hid.h b/lib/cpu32/hid.h
index 7eac0bb..5caf7c3 100644
--- a/lib/cpu32/hid.h
+++ b/lib/cpu32/hid.h
@@ -1,10 +1,14 @@
 #define HID_ADDR 0x480000
+// struct { U16 x; U16 y; U8 sy; U8 keys[MAX_KEYS];}
 // todo: cpu32h?
 U0 WriteWord(GC* gc, U32 addr, U16 val);
 U0 move_mouse(GC* gc, U16 x, U16 y) {
     WriteWord(gc, HID_ADDR, x);
     WriteWord(gc, HID_ADDR + 2, y);
 }
+U0 scroll_mouse(GC* gc, I8 y) {
+    gc->mem[HID_ADDR + 4] = y;
+}
 U0 mouse_btn(GC* gc, U8 id, U8 val) {
   U8 flag = gc->mem[HID_ADDR + 4];
   if (val) {
@@ -37,21 +41,25 @@ U0 kbd_btn(GC* gc, U16 id, U8 val) {
 }
 U8 hid_events(GC* gc) {
   SDL_Event event;
+  scroll_mouse(gc, 0);
   while (SDL_PollEvent(&event)) {
     switch(event.type) {
-      case SDL_QUIT:
+      case SDL_EVENT_QUIT:
         return 1;
-      case SDL_MOUSEMOTION:
+      case SDL_EVENT_MOUSE_MOTION:
         move_mouse(gc, event.motion.x / gc->gg.scale, event.motion.y / gc->gg.scale);
         break;
-      case SDL_MOUSEBUTTONDOWN:
-      case SDL_MOUSEBUTTONUP:
-        mouse_btn(gc, event.button.button, event.type == SDL_MOUSEBUTTONDOWN);
+      case SDL_EVENT_MOUSE_BUTTON_DOWN:
+      case SDL_EVENT_MOUSE_BUTTON_UP:
+        mouse_btn(gc, event.button.button, event.type == SDL_EVENT_MOUSE_BUTTON_DOWN);
+        break;
+      case SDL_EVENT_MOUSE_WHEEL:
+        scroll_mouse(gc, event.wheel.integer_y);
         break;
-      case SDL_KEYDOWN:
-      case SDL_KEYUP:
+      case SDL_EVENT_KEY_DOWN:
+      case SDL_EVENT_KEY_UP:
         if (!event.key.repeat)
-          kbd_btn(gc, event.key.keysym.scancode, event.type == SDL_KEYDOWN);
+          kbd_btn(gc, event.key.scancode, event.type == SDL_EVENT_KEY_DOWN);
         break;
     }
   }
diff --git a/lib/cpu32/spu.h b/lib/cpu32/spu.h
index fb02299..69c11ee 100644
--- a/lib/cpu32/spu.h
+++ b/lib/cpu32/spu.h
@@ -1,45 +1,78 @@
-#define AUDIO_FREQUENCY 44100
-#define AUDIO_FORMAT AUDIO_S16SYS
-#define AUDIO_CHANNELS 1
-#define AUDIO_SAMPLES 4096
-
-// Audio callback function
-void AudioCallback(void* userdata, U8* stream, int len) {
-  static double phase = 0;
-  I16* buffer = (I16*)stream;
-  int length = len / 2;
-  double frequency = *((double*)userdata);
-  I32 i;
-
-  for(i = 0; i < length; i++) {
-    buffer[i] = 32767 * sin(phase);
-    phase += 2 * M_PI * frequency / AUDIO_FREQUENCY;
-    if(phase > 2 * M_PI) {
-      phase -= 2 * M_PI;
+// 8kHz is enough for everyone!
+// ...and allows to fit 8 seconds (Max ADSR len) in U16
+#define SPURASTFREQ 8000
+U0 GAchangen(struct Gareg* gr, F32* samples, U16 period, I32 len) {
+  if (!gr->freq) return;
+  U32 pos = gr->pos;
+  U32 i = 0;
+  F32 mul = 0;
+  for (; i < len; i++, pos++) {
+    if (pos < gr->a) mul = ((F32)pos)/(gr->a);
+    else if (pos < gr->d) mul = 1-.5*(pos-gr->a)/(gr->d-gr->a);
+    else if (pos < gr->s) mul = .5;
+    else if (pos < gr->r) mul = .5-.5*(pos-gr->s)/(gr->r-gr->s);
+    else {
+      gr->freq = 0;
+      return;
     }
+
+    F32 phase = (period + i) * gr->freq / (F32)SPURASTFREQ;
+    samples[i] += SDL_sinf(phase * 2 * SDL_PI_F) * mul * gr->volume / 15;
   }
+  gr->pos += len;
 }
 
-// Function to play beep sound
-void PlayBeep(double frequency) {
-  SDL_AudioSpec want, have;
-  SDL_AudioDeviceID dev;
-
-  SDL_zero(want);
-  want.freq = AUDIO_FREQUENCY;
-  want.format = AUDIO_FORMAT;
-  want.channels = AUDIO_CHANNELS;
-  want.samples = AUDIO_SAMPLES;
-  want.callback = AudioCallback;
-  want.userdata = &frequency;
-
-  dev = SDL_OpenAudioDevice(NULL, 0, &want, &have, SDL_AUDIO_ALLOW_FORMAT_CHANGE);
-  if (dev == 0) {
-    fprintf(stderr, "Failed to open audio: %s\n", SDL_GetError());
-    return;
+
+static U0 SDLCALL GAgen(U0 *userdata, SDL_AudioStream *astream, I32 needed, I32 total)
+{
+  gc_ga32* s32 = userdata;
+  needed /= sizeof (F32);
+  while (needed > 0) {
+    F32 samples[128] = {0};
+
+    const I32 total = SDL_min(needed, SDL_arraysize(samples));
+    U8 chan;
+    for (chan = 0; chan < SPU_CHAN; chan++)
+      GAchangen(&(s32->chan[chan]), samples, s32->period, total);
+
+    s32->period += total;
+    s32->period %= SPURASTFREQ;
+
+    SDL_PutAudioStreamData(astream, samples, total * sizeof (float));
+    needed -= total;
   }
+}
+
+U0 GAinit(gc_ga32* s32) {
+  SDL_AudioSpec spec;
+  spec.channels = 1;
+  spec.format = SDL_AUDIO_F32; // База от SDL3
+  spec.freq = SPURASTFREQ;
+  SDL_AudioStream* stream = SDL_OpenAudioDeviceStream(SDL_AUDIO_DEVICE_DEFAULT_PLAYBACK, &spec, GAgen, s32);
+  if (!stream) return;
+  SDL_ResumeAudioStreamDevice(stream);
+  s32->period = 0;
+
+  U8 chan;
+  for (chan = 0; chan < SPU_CHAN; chan++) {
+    s32->chan[chan].freq = 0;
+  }
+}
+
+U0 GAsnd(gc_ga32* s32, U16 freq, U32 adsr, U8 volume) {
+
+  U32 chan = volume >> 4;
+  if (chan > 3) chan = 0;
+
+  s32->chan[chan].freq = freq;
+  s32->chan[chan].pos = 0;
 
-  SDL_PauseAudioDevice(dev, 0);
-  SDL_Delay(100);
-  SDL_CloseAudioDevice(dev);
+#define TACT (8 * SPURASTFREQ / 1000) // 8ms
+  // Expand ADSR
+  s32->chan[chan].a = (adsr >> 24) * TACT;
+  s32->chan[chan].d = s32->chan[chan].a + ((adsr >> 16) & 0xFF) * TACT;
+  s32->chan[chan].s = s32->chan[chan].d + (adsr & 0xFF) * TACT;
+  s32->chan[chan].r = s32->chan[chan].s + ((adsr >> 8) & 0xFF) * TACT;
+#undef TACT
+  s32->chan[chan].volume = (volume & 0xF) * (adsr >= 0x100 ? 1 : 2);
 }
diff --git a/tests/vgatext.asm b/tests/vgatext.asm
index 02000c8..ada5ee6 100644
--- a/tests/vgatext.asm
+++ b/tests/vgatext.asm
@@ -1,4 +1,45 @@
-jmp main
+vidinit:
+  mov %esi $49FF00
+  mov %eax $02
+  sb %esi %eax
+  mov %esi $4A0000
+  mov %egi palitro
+  mov %ecx 15
+.pal:
+  lw %egi %eax
+  sw %esi %eax
+  lp .pal
+  jmp debug
+palitro: bytes $00 $00 $00 $54 $A0 $02 $40 $55 $15 $00 $15 $54 $B5 $02 $B5 $56 $4A $29 $4A $7D $EA $2B $EA $7F $5F $29 $5F $7D $FF $2B $FF $7F
+debug:
+  mov %egi $480000
+  mov %edx 0 ; Shift flag
+.l1:
+  lb %egi %eax
+  cmp %eax $E1
+  jne .l1
+debug:
+  mov %esi $4F0000
+  mov %egi $480000
+  mov %ebx $10
+  mov %ecx 10
+  mov %edx $0F
+.l1:
+  lb %egi %eax
+  sb %esi %eax
+  sb %esi %edx
+  lp .l1
+
+  int $11
+  mov %edx 16
+  int $22
+  jmp debug
+
+vputs:
+  lb %esi %eax
+  cmp %eax $00
+  re
+  psh vputs
 vputc:
   cmp %eax '$' ; newline
   je .newline
@@ -12,13 +53,6 @@ vputc:
   add %e14 224
   rts
 
-vputs:
-  lb %esi %eax
-  cmp %eax $00
-  re
-  jsr vputc
-  jmp vputs
-
 main:
   mov %esi $49FF00
   mov %eax $02
@@ -36,6 +70,13 @@ main:
   jsr vputs
   int $11
 .loop:
+  int $9
+  cmp %edx 0
+  jne .recv
+  mov %edx 8
+  int $22
+  jmp .loop
+.recv:
   int $1
   pop %eax
   cmp %eax '$'
@@ -58,5 +99,5 @@ main:
 .term:
   hlt
 
-hw: bytes "$> ^@"
+hw: bytes "$^$ ^@"
 
